{"version":3,"sources":["<no source>","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_breakpoint.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/_media-query-order.scss","%3Cinput%20css%20MIcQ_u%3E","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/legacy/style/tool/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_legacy.scss"],"names":[],"mappings":"AAAA;;GAAA,ACkBI;ECPE,cAAA,CCTN,CFgBI;ECPE,cAAA,CCNN,CFaI;ECPE,cAAA,CCHN,CFUI;ECPE,cAAA,CCAN,CCGI,2DCEF,mDCAE,yDHDF,CECA,mDCAE,yDHGF,CEHA,6DCAE,8DHOF,CEPA,6DCAE,8DHWF,CEXA,qDCAE,0DHeF,CEfA,qDCAE,0DHmBF,CEnBA,yDCAE,4DHuBF,CEvBA,yDCAE,4DH2BF,CE3BA,2DCAE,6DH+BF,CE/BA,2DCAE,6DHmCF,CEnCA,2DCAE,6DHuCF,CEvCA,2DCAE,6DH2CF,CE3CA,2DCAE,6DH+CF,CE/CA,2DCAE,6DHmDF,CACF","file":"icons-others.legacy.min.css","sourcesContent":[null,"////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Media query order\n/// Fix temporaire, déclare les média query vides de chaque breakpoints, pour garder le bon ordre au build\n////\n\n@import 'core/style/selector/setting/breakpoint';\n@import 'core/style/selector/tool/breakpoint';\n\n@each $bp, $limits in $breakpoints {\n  @if $bp != xs {\n    @include respond-from($bp) {\n      /*! media #{$bp} */\n    }\n  }\n}\n","@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-icon-leaf-fill::before, .fr-icon-leaf-fill::after {\n    background-image: url(\"../../../icons/others/leaf-fill.svg\");\n  }\n\n  .fr-icon-leaf-line::before, .fr-icon-leaf-line::after {\n    background-image: url(\"../../../icons/others/leaf-line.svg\");\n  }\n\n  .fr-icon-lightbulb-fill::before, .fr-icon-lightbulb-fill::after {\n    background-image: url(\"../../../icons/others/lightbulb-fill.svg\");\n  }\n\n  .fr-icon-lightbulb-line::before, .fr-icon-lightbulb-line::after {\n    background-image: url(\"../../../icons/others/lightbulb-line.svg\");\n  }\n\n  .fr-icon-plant-fill::before, .fr-icon-plant-fill::after {\n    background-image: url(\"../../../icons/others/plant-fill.svg\");\n  }\n\n  .fr-icon-plant-line::before, .fr-icon-plant-line::after {\n    background-image: url(\"../../../icons/others/plant-line.svg\");\n  }\n\n  .fr-icon-recycle-fill::before, .fr-icon-recycle-fill::after {\n    background-image: url(\"../../../icons/others/recycle-fill.svg\");\n  }\n\n  .fr-icon-recycle-line::before, .fr-icon-recycle-line::after {\n    background-image: url(\"../../../icons/others/recycle-line.svg\");\n  }\n\n  .fr-icon-scales-3-fill::before, .fr-icon-scales-3-fill::after {\n    background-image: url(\"../../../icons/others/scales-3-fill.svg\");\n  }\n\n  .fr-icon-scales-3-line::before, .fr-icon-scales-3-line::after {\n    background-image: url(\"../../../icons/others/scales-3-line.svg\");\n  }\n\n  .fr-icon-seedling-fill::before, .fr-icon-seedling-fill::after {\n    background-image: url(\"../../../icons/others/seedling-fill.svg\");\n  }\n\n  .fr-icon-seedling-line::before, .fr-icon-seedling-line::after {\n    background-image: url(\"../../../icons/others/seedling-line.svg\");\n  }\n\n  .fr-icon-umbrella-fill::before, .fr-icon-umbrella-fill::after {\n    background-image: url(\"../../../icons/others/umbrella-fill.svg\");\n  }\n\n  .fr-icon-umbrella-line::before, .fr-icon-umbrella-line::after {\n    background-image: url(\"../../../icons/others/umbrella-line.svg\");\n  }\n}","////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n"]}